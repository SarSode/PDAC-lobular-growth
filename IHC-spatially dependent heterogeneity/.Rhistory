x_line <- simpsons_pval_2$p_val
y_line <- simpsons_pval_2$Simpsons
scatter_simppval <- ggplot(simpsons_pval_2, aes(p_val, Simpsons, color = Stain), size = 4, alpha = 0.8)
Suppl_Fig_10a <- scatter_simppval + geom_point(aes(alpha = 0.7, size = 0.5)) +
ggtitle("scatterplot of p-values and simpsons index: Suppl fig 10a") +
geom_hline(yintercept = simpline,linetype = "dashed", col = "black") +
geom_text(aes(0.75, simpline, label = "3rd quantile", vjust = -1), size = 4, col = "black") +
geom_vline(xintercept = pline, linetype = "dashed", color = "black") +
geom_text(aes(0.15, pline, label = "p = 0.05 ", vjust = -1), size = 4, col = "black") +
scale_color_manual(values =
c("CK17"="#e41a1c", "CK5"="#984ea3", "HMGA2" = "#ff7f00", "CA125" = "#ffff33", "CDX2" = "#4daf4a", "Muc5" = "#377eb8"))+
theme_clean()
Suppl_Fig_10a
scatter_simppval + geom_point(aes(alpha = 0.7, size = 3)) +
ggtitle("scatterplot of p-values and simpsons index") +
geom_hline(yintercept = simpline,linetype = "dashed", col = "black") +
geom_text(aes(0.75, simpline, label = "3rd quantile", vjust = -1), size = 4, col = "black") +
geom_vline(xintercept = pline, linetype = "dashed", color = "black") +
geom_text(aes(0.15, pline, label = "p = 0.05 ", vjust = -1), size = 4, col = "black") +
scale_color_manual(values =
c("CK17"="#e41a1c", "CK5"="#984ea3", "HMGA2" = "#ff7f00", "CA125" = "#ffff33", "CDX2" = "#4daf4a", "Muc5" = "#377eb8"))+
geom_smooth(method = "lm", se = FALSE) +
theme_clean()
simpsons_pval_3 <- simpsons_pval_2
simpsons_pval_3$Event_simp_above <- factor(186)
simpsons_pval_3$Event_pval_below <- factor(186)
simpsons_pval_3 <- simpsons_pval_3 %>% mutate(Event_simp_above = ifelse(Simpsons >= simpline,
'true', .$Event_simp_above))
simpsons_pval_3 <- simpsons_pval_3 %>% mutate(Event_pval_below = ifelse(p_val <= pline,
'true', .$Event_pval_below))
simpsons_pval_3 <- simpsons_pval_3 %>% mutate(Event_simp_above = ifelse(Event_simp_above != "true",
'false', .$Event_simp_above))
simpsons_pval_3 <- simpsons_pval_3 %>% mutate(Event_pval_below = ifelse(Event_pval_below != "true",
'false', .$Event_pval_below))
simpsons_pval_4 <- simpsons_pval_3[, c(1, 3, 5:7)]
simpsons_pval_4[is.na(simpsons_pval_4)] <- 'false'
simpsons_venn <- simpsons_pval_4[, c(3, 4, 5)]
simpsons_venn <- simpsons_venn  %>% mutate(across(starts_with("Event"), as.logical))
library(ggVennDiagram)
library(dichromat)
Venn_simp_pval <- ggVennDiagram(lapply(simpsons_venn[, c(2, 3)], function (x)
which(x == 1)))
library(survminer)
Suppl_Fig_10b <- Venn_simp_pval +
scale_fill_gradient(low = "#0072B2", high = "#CC79A7")
scale_colour_gradient(low = "#0072B2", high = "#CC79A7")
theme_cleantable()
Suppl_Fig_10b #color changed
simppval_return <- simpsons_venn %>%
group_by(Event_pval_below, Event_simp_above) %>%
summarise(N.events = n())
simppval_return
simpson_return_perstain <- simpsons_pval_2 %>%
group_by(Stain) %>%
summarise(N.instances = n())
simpson_return_perstain
sum(simpson_return_perstain$N.instances)
## To examplify, create a subset of a to re-create this type of graph with one example from each heterogenety/plasticity category:
# PKR-2, 49, 70 and 17.
simpson_2pval_2 <- simpsons_pval_2[simpsons_pval_2$PKR == c("2"), ]
simpson_49pval_2 <- simpsons_pval_2[simpsons_pval_2$PKR == c("49"), ]
simpson_70pval_2 <- simpsons_pval_2[simpsons_pval_2$PKR == c("70"), ]
simpson_17pval_2 <- simpsons_pval_2[simpsons_pval_2$PKR == c("17"), ]
ex_simpson_pval_2 <- rbind(simpson_2pval_2, simpson_49pval_2, simpson_70pval_2, simpson_17pval_2)
exlg_simpson_pval_2 <- ex_simpson_pval_2
exlg_simpson_pval_2$p_val <- log10(exlg_simpson_pval_2$p_val)
ggplot(exlg_simpson_pval_2, aes(x=PKR,
color = Stain, fill = Stain,
position = "dodge")) +
geom_bar(aes(y = p_val), stat = "identity", width=0.6, position = position_dodge2(width = 0.5, preserve = "single")) +
geom_bar(aes(y = Simpsons), stat = "identity", width=0.6, position = position_dodge2(width = 0.5, preserve = "single")) +
scale_fill_brewer(palette = "PuOr") +
scale_color_brewer(palette = "PuOr") +
geom_hline(yintercept = log10(pline), linetype = "dashed", color = "brown") +
geom_hline(yintercept = simpline,linetype = "dashed", color = "brown") +
geom_hline(yintercept = 0,linetype = "solid", color = "black")+
geom_text(aes(4.4, log10(pline), label = "p < 0.05", vjust = 2), col = "brown") +
geom_text(aes(4.4, simpline, label = "3rd quantile", vjust = -1), col = "brown") +
labs(title = "p-values of wilcoxon test and Simpsons") +
ylab(c("log(adjusted p-values from wilxocon testing)                            Simpson index of diversity")) +
ylim(-3.8, 1.5) +
theme_clean()
## Making groups for high heterogenous PKRs based on simpsons.
simpsons_above <- simpsons_2$Simpsons >= simpline
simpsons_ab <- simpsons_2[simpsons_above, ] #NA is filled in those without the match, remove those...
library(Hmisc)
simpsons_pass <- na.delete(simpsons_ab)
ssimp <- split(simpsons_pass, f = simpsons_pass$PKR)
ssimp2 <- lapply(X= ssimp, function (x) {
nrow(x)
})
ssimp3 <- bind_rows(ssimp2)
# This is now PKR in column names, and in row 1 how many stains that case had that were considered highly heterogenous (cutoff 3rd quantile) using Simpson index of diversity.
# This can be added to m_Crows, prev. used for metadata in the heatmaps.
ssimp4 <- melt(ssimp3)
rownames(ssimp4) <- ssimp4$variable
rownames(ssimp4) <- paste(rownames(ssimp4), " ", sep="")
str(ssimp4)
het <- merge(ssimp4, m_Crows,by = 'row.names', all = T)
str(het)
## Now same grouping for heterogeneity as plasticity:
# Extensive: 3 or more markers above simpson threshold
# Moderate: 2 markers above simpson threshold
# Slight plasticity: One marker above simpson threshold
het$Heterogeneity <- character(31)
het$Heterogeneity <- "None"
het<- het %>% mutate(Heterogeneity = ifelse(grepl('1', het$value), 'Slight', .$Heterogeneity))
het<- het %>% mutate(Heterogeneity = ifelse(grepl('2', het$value), 'Moderate', .$Heterogeneity))
het<- het %>% mutate(Heterogeneity = ifelse(grepl('3', het$value), 'Extensive', .$Heterogeneity))
het <- het %>% mutate(Heterogeneity = ifelse(grepl('4', het$value), 'Extensive', .$Heterogeneity))
het <- het[, -c(2, 3)]
# het has ordinal variables, which is un-plottable as barcharts.
# So these will needs to be ranked instead.
# None = 0.5 ( this is in order to see those represented and not just as empty space in the charts)
# Slight = 1
# Moderate = 2
# Extensive = 3
het$Heterogeneity_Cat <- numeric(31)
het$Heterogeneity_Cat <- 0
het <- het %>% mutate(Heterogeneity_Cat = ifelse(grepl('Slight', het$Heterogeneity), '1', .$Heterogeneity_Cat))
het<- het %>% mutate(Heterogeneity_Cat = ifelse(grepl('Moderate', het$Heterogeneity), '2', .$Heterogeneity_Cat))
het<- het %>% mutate(Heterogeneity_Cat = ifelse(grepl('Extensive', het$Heterogeneity), '3', .$Heterogeneity_Cat))
het$Plasticity_Cat <- numeric(31)
het$Plasticity_Cat <- 0
het<- het %>% mutate(Plasticity_Cat = ifelse(grepl('Slight', het$Plasticity), '1', .$Plasticity_Cat))
het<- het %>% mutate(Plasticity_Cat = ifelse(grepl('Moderate', het$Plasticity), '2', .$Plasticity_Cat))
het<- het %>% mutate(Plasticity_Cat = ifelse(grepl('Extensive', het$Plasticity), '3', .$Plasticity_Cat))
het$Heterogeneity_Cat <- as.numeric(het$Heterogeneity_Cat)
het$Plasticity_Cat <- as.numeric(het$Plasticity_Cat)
het$PKR <- as.character(het$Row.names)
row.names(het) <- het$PKR
het$PKR<-gsub("PKR-","",as.character(het$PKR))
#het <- het[, -1]
str(het)
het$Group <- character(31)
het$Group <-  "Same"
het <- het %>% mutate(Group=ifelse(Heterogeneity_Cat > Plasticity_Cat, 'Het_Simpsons higher', .$Group))
het <- het %>% mutate(Group=ifelse(Plasticity_Cat > Heterogeneity_Cat, 'Het_Wilcox higher', .$Group))
ggplot(het, aes(x=PKR, position = "dodge", color = Group, fill = Group)) +
geom_bar(aes(y = Heterogeneity_Cat), stat = "identity", width=0.6, position = position_dodge2(width = 0.5, preserve = "single")) +
geom_bar(aes(y = -Plasticity_Cat), stat = "identity", width = 0.6, position = position_dodge2(width = 0.5, preserve = "single")) +
scale_fill_brewer(palette = "Accent") +
scale_color_brewer(palette = "Accent") +
geom_hline(yintercept = 0,linetype = "solid", color = "black")+
labs(title = "Comparing heterogeneity measures") +
ylab(c("Plasticity by Wilcox                            Heterogeneity by Simpsons")) +
scale_y_continuous(breaks=c(-3, -2, -1, 1, 2, 3), label= c("Extensive", "Moderate", "Slight", "Slight", "Moderate", "Extensive")) +
theme_clean()
##### Aggregated histogram plots #####
# Visualizing if there is a any grouping of low or high heterogeneity, depending on markers expressed in either compartment.
waterr <- all_combined[, c(1, 2, 3, 4, 7, 12)]
water <- split(waterr, f = waterr$PKR)
watertoplot <- lapply(water, function (x){
a <- x[x$Tissue_compartment %in% c('Lobule'), ]  # only retrieves lobular ROIs.
b <- a[a$Stain %in% c('CK17', 'CK5', 'HMGA2', 'CA125'), ] #only keep the basal like related markers in "b"
c <- sum(a$Num.Tumor..Positive) # nr of positive tumor cells in "c" (So not total numer of cell detections.)
d <- sum(b$Num.Tumor..Positive) # Nr of basal like related positive cells
cla <- a[a$Stain %in% c('Muc5', 'CDX2'), ]
e <- sum(cla$Num.Tumor..Positive) #nr of classical related positive cells
ratio_bas <- d/c
ratio_cla <- e/c
plo <- data_frame(Basal_r = ratio_bas, Classical_r = ratio_cla) # For the individual case, the ratio of basal like and classical markers out of the total nr of positive cells is noted in "plo".
})
bound <- bind_rows(watertoplot, .id = "tib")
colnames(bound)[1] <- "Case_ID"
head(bound)
wat <- melt(bound, id = "Case_ID",variable.name = "Group", value.name = "Ratio")
head(wat)
wat$Group <- factor(wat$Group, levels = c('Classical_r', 'Basal_r'))
wat <- wat %>%
arrange(desc(Group), Ratio)
wat <- wat %>%
mutate(Case_ID = factor(Case_ID, unique(Case_ID)))
ratio_cols <- c("#FFe5ec", "#ceeaf6")
ratio_cols_acinar <- c(Classical_r = "#ceeaf6", Basal_r = "#FFe5ec")
Ratio_Lobule <-ggplot(wat, aes(x=Case_ID, y=Ratio, fill=Group)) +
geom_col() +
labs(title = "Ratio of all positive cells in acinar ROIs", subtitle = "All cases") +
theme_clean()+
scale_fill_manual(values=ratio_cols_acinar)
Ratio_Lobule
watertoplot_stroma <- lapply(water, function (x){
s <- x[x$Tissue_compartment %in% c('Stroma'), ]
b <- s[s$Stain %in% c('CK17', 'CK5', 'HMGA2', 'CA125'), ]
c <- sum(s$Num.Tumor..Positive)
d <- sum(b$Num.Tumor..Positive)
cla <- s[s$Stain %in% c('Muc5', 'CDX2'), ]
e <- sum(cla$Num.Tumor..Positive)
ratio_bas <- d/c
ratio_cla <- e/c
plo <- data_frame(Basal_r = ratio_bas, Classical_r = ratio_cla)
})
head(watertoplot_stroma)
bound_stroma <- bind_rows(watertoplot_stroma, .id = "tib")
colnames(bound_stroma)[1] <- "Case_ID"
wat_s <- melt(bound_stroma, id = "Case_ID",variable.name = "Group", value.name = "Ratio")
wat_s <- wat_s %>%
arrange(desc(Group), Ratio)
wat_s <- wat_s %>%
mutate(Case_ID = factor(Case_ID, unique(Case_ID)))
Ratio_stroma <-ggplot(wat_s, aes(x=Case_ID, y=Ratio, fill=Group)) +
geom_col() +
labs(title = "Ratio of all positive cells in stromal ROIs", subtitle = "All cases") +
theme_clean()+
scale_fill_manual(values=ratio_cols)
Ratio_stroma
# Now a faceted plot with both acinar and stromal ROIs.
head(wat)
head(wat_s)
wat_joined <- bind_rows( "Stromal" = wat_s, "Acinar" = wat, .id= "ROI") #The order of "stromal" and "acinar" here determine the order that will show up in the plot "sp"
sp <- ggplot(wat_joined, aes(x = Case_ID, y = Ratio, fill = Group)) +
geom_col(width = 0.7) +
theme_clean()+
scale_fill_manual(values=ratio_cols)
sp +
facet_grid(ROI ~ .)+ #sort on (basal like) expression in stroma.
labs(title = "Ratio of classical and basal-like expressing cells in stromal and acinar ROIs", subtitle = "All cases")
# Visualise if there is any clustering or in other of the heterogenetiy classes
# Such as in the metadata m_Crows, a copy is made ("Plasticity_degree")
Plasticity_degree <- m_Crows
Plasticity_degree$Case_ID <- row.names(Plasticity_degree)
wat_m <- wat
wat_str_m <- wat_s
library(stringr)
wat_m$Case_ID <- as.character(wat_m$Case_ID)
wat_m <- wat_m %>%
mutate(Case_ID = str_replace_all(Case_ID," ", ""))
Plasticity_degree <- Plasticity_degree %>%
mutate(Case_ID = str_replace_all(Case_ID," ", ""))
wat_meta <- merge(wat_m, Plasticity_degree, by = "Case_ID")
wat_str_m$Case_ID <- as.character(wat_str_m$Case_ID)
wat_str_m <- wat_str_m %>%
mutate(Case_ID = str_replace_all(Case_ID," ", ""))
wat_str_meta <- merge(wat_str_m, Plasticity_degree, by = "Case_ID")
wat_joined_meta <- bind_rows("Acinar" = wat_meta,  "Stromal" = wat_str_meta, .id= "ROI")
wat2_s_joined <- wat_joined_meta %>%
arrange(desc(Plasticity), Ratio)
wat3_s_joined <- wat2_s_joined %>%
mutate(Case_ID = factor(Case_ID, unique(Case_ID)))
Plast_order <- c("Extensive", "Moderate", "Slight", "None", "Classical", "Basal")
ratios_joined <- wat3_s_joined %>%
arrange(factor(Plasticity, levels = Plast_order))
Ratio_joined <- ggplot(ratios_joined, aes(x = Case_ID, y = Ratio, fill = Group)) +
geom_col(width = 0.7) +
theme_clean()+
scale_fill_manual(values=ratio_cols_acinar)
Ratio_joined +
facet_grid(ROI ~ .) +
geom_point(aes(color=Plasticity, alpha = Group)) +
scale_colour_manual(values = c(Extensive = "#4D004B", Moderate = "#8C6BB1", Slight = "#9EBCDA", None = "#808080", Classical = "#97C8FF", Basal = "#FF6242")) +
scale_alpha_discrete(range=c(0, 1))+
labs(title = "Ratio of all positive cells separated on compartment", subtitle = "All cases")
### The ratio plots, but with only no plasticity ###
ratio_noplast <- split(ratios_joined, f = ratios_joined$Plasticity)
ratio_noplast <- ratio_noplast$None
ratio_noplast_s <- ratio_noplast %>%
arrange(desc(Group), Ratio)
# Cases with no plasticity, drawn manually from wat_joined(the sorted datafile):
wat_joined$Case_ID <- as.character(wat_joined$Case_ID)
wat_joined_noplast <- wat_joined[wat_joined$Case_ID %in% c("15", "17", "52a", "66", "32", "58", "47"), ]
sp_noplast <- ggplot(wat_joined_noplast, aes(x = Case_ID, y = Ratio, fill = Group)) +
geom_col(width = 0.7) +
theme_clean()+
scale_fill_manual(values=ratio_cols) +
labs(title = "Ratio of all positive cells separated on compartment", subtitle = "Subgroup: Only cases with no plasticity")
sp_noplast +
facet_grid(ROI ~ .) #sort on (basal like) expression in stroma.
distrib <- all_combined[, c(1, 2, 3, 5, 11, 12)]
distrib <- split(distrib, f = distrib$Tissue_compartment)
distrib_a <- distrib$Lobule
distrib_s <- distrib$Stroma
library(forcats)
## Basal-like in stroma ##
distrib_s_ba <- distrib_s[distrib_s$Stain %in% c('CK17', 'CK5', 'HMGA2', 'CA125'), ]
distrib_stroma_basal <- ggplot(distrib_s_ba, aes(x=fct_reorder(Group_Case_Class, Tumor..Positive..), y=Tumor..Positive.., fill = Stain)) +
geom_col(width = 0.7) +
labs(title = "Distribution of basal-like stains'expression in the stroma", subtitle = "All cases") +
theme_clean() +
facet_grid(Stain ~ .) +
labs(x = "Each case + stromal ROI combination",) +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank())
distrib_s_CK17 <- distrib_s_ba[distrib_s_ba$Stain %in% 'CK17', ]
length(unique(distrib_s_CK17$Group_Case_Class))
n_occur_17 <- data.frame(table(distrib_s_CK17$Group_Case_Class))
n_occur_17[n_occur_17$Freq > 1,]
# Stain specific
distrib_stroma_CK17 <-ggplot(distrib_s_CK17, aes(x=fct_reorder(Group_Case_Class, Tumor..Positive.., na.rm = TRUE), y=Tumor..Positive.., fill = Stain)) +
geom_col(width = 0.7) +
labs(title = "Distribution of CK17 expression in the stroma", subtitle = "All cases") +
theme_clean() +
labs(x = "Each case + stromal ROI combination", y = "% CK17+ cells") +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank()) +
scale_fill_manual(values = c("red4"))
distrib_s_CK5 <- distrib_s_ba[distrib_s_ba$Stain %in% 'CK5', ]
distrib_stroma_CK5 <-ggplot(distrib_s_CK5, aes(x=fct_reorder(Group_Case_Class, Tumor..Positive..), y=Tumor..Positive.., fill = Stain)) +
geom_col(width = 0.7) +
labs(title = "Distribution of CK5 expression in the stroma", subtitle = "All cases") +
theme_clean() +
labs(x = "Each case + stromal ROI combination", y = "% CK5+ PDAC cells") +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank()) +
scale_fill_manual(values = c("grey3"))
distrib_s_CA125 <- distrib_s_ba[distrib_s_ba$Stain %in% 'CA125', ]
distrib_stroma_CA125 <-ggplot(distrib_s_CA125, aes(x=fct_reorder(Group_Case_Class, Tumor..Positive..), y=Tumor..Positive.., fill = Stain)) +
geom_col(width = 0.7) +
labs(title = "Distribution of CA125 expression in the stroma", subtitle = "All cases") +
theme_clean() +
labs(x = "Each case + stromal ROI combination", y = "% CA125+ PDAC cells") +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank()) +
scale_fill_manual(values = c("brown2"))
distrib_s_HMGA2 <- distrib_s_ba[distrib_s_ba$Stain %in% 'HMGA2', ]
distrib_stroma_HMGA2 <-ggplot(distrib_s_HMGA2, aes(x=fct_reorder(Group_Case_Class, Tumor..Positive..), y=Tumor..Positive.., fill = Stain)) +
geom_col(width = 0.7) +
labs(title = "Distribution of HMGA2 expression in the stroma", subtitle = "All cases") +
theme_clean() +
labs(x = "Each case + stromal ROI combination", y = "% HMGA2+ PDAC cells") +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank()) +
scale_fill_manual(values = "sienna4")
## Classical in stromal ROIs ##
distrib_s_cl <- distrib_s[distrib_s$Stain %in% c('Muc5', 'CDX2'), ]
distrib_stroma_classical <-ggplot(distrib_s_cl, aes(x=fct_reorder(Group_Case_Class, Tumor..Positive..), y=Tumor..Positive.., fill = Stain)) +
geom_col(width = 0.7) +
labs(title = "Distribution of classical stains'expression in the stroma", subtitle = "All cases") +
theme_clean() +
facet_grid(Stain ~ .) +
labs(x = "Each case + stromal ROI combination",) +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank()) +
scale_fill_manual(values=col.pal)
#Stain specific
distrib_s_Muc5 <- distrib_s_cl[distrib_s_cl$Stain %in% 'Muc5', ]
distrib_stroma_Muc5 <-ggplot(distrib_s_Muc5, aes(x=fct_reorder(Group_Case_Class, Tumor..Positive..), y=Tumor..Positive.., fill = Stain)) +
geom_col(width = 0.7) +
labs(title = "Distribution of Muc5 expression in the stroma", subtitle = "All cases") +
theme_clean() +
labs(x = "Each case + stromal ROI combination", y = "% Muc5+ PDAC cells") +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank()) +
scale_fill_manual(values = "#005A9C")
distrib_s_CDX2 <- distrib_s_cl[distrib_s_cl$Stain %in% 'CDX2', ]
distrib_stroma_CDX2 <-ggplot(distrib_s_CDX2, aes(x=fct_reorder(Group_Case_Class, Tumor..Positive..), y=Tumor..Positive.., fill = Stain)) +
geom_col(width = 0.7) +
labs(title = "Distribution of CDX2 expression in the stroma", subtitle = "All cases") +
theme_clean() +
labs(x = "Each case + stromal ROI combination", y = "% CDX2+ PDAC cells") +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank()) +
scale_fill_manual(values = "lightsteelblue4")
## Basal like in acinar ROIs ##
distrib_a_ba <- distrib_a[distrib_a$Stain %in% c('CK17', 'CK5', 'HMGA2', 'CA125'), ]
distrib_lobule_basal <-ggplot(distrib_a_ba, aes(x=fct_reorder(Group_Case_Class, Tumor..Positive..), y=Tumor..Positive.., fill = Stain)) +
geom_col(width = 0.7) +
labs(title = "Distribution of basal-like stains' expression in the acinar invasion ROIs", subtitle = "All cases") +
theme_clean() +
facet_grid(Stain ~ .) +
labs(x = "Each case + stromal ROI combination",) +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank())
# Stain specific
distrib_a_CK17 <- distrib_a_ba[distrib_a_ba$Stain %in% 'CK17', ]
distrib_lobule_CK17 <-ggplot(distrib_a_CK17, aes(x=fct_reorder(Group_Case_Class, Tumor..Positive..), y=Tumor..Positive.., fill = Stain)) +
geom_col(width = 0.7) +
labs(title = "Distribution of CK17 expression in the acinar invasion ROIs", subtitle = "All cases") +
theme_clean() +
labs(x = "Each case + stromal ROI combination", y = "% CK17+ PDAC cells") +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank()) +
scale_fill_manual(values = "red4")
distrib_a_CK5 <- distrib_a_ba[distrib_a_ba$Stain %in% 'CK5', ]
distrib_lobule_CK5 <-ggplot(distrib_a_CK5, aes(x=fct_reorder(Group_Case_Class, Tumor..Positive..), y=Tumor..Positive.., fill = Stain)) +
geom_col(width = 0.7) +
labs(title = "Distribution of CK5 expression in the acinar invasion ROIs", subtitle = "All cases") +
theme_clean() +
labs(x = "Each case + stromal ROI combination", y = "% CK5+ PDAC cells") +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank()) +
scale_fill_manual(values = "grey3")
distrib_a_HMGA2 <- distrib_a_ba[distrib_a_ba$Stain %in% 'HMGA2', ]
distrib_lobule_HMGA2 <-ggplot(distrib_a_HMGA2, aes(x=fct_reorder(Group_Case_Class, Tumor..Positive..), y=Tumor..Positive.., fill = Stain)) +
geom_col(width = 0.7) +
labs(title = "Distribution of HMGA2 expression in the acinar invasion ROIs", subtitle = "All cases") +
theme_clean() +
labs(x = "Each case + stromal ROI combination", y = "% HMGA2+ PDAC cells") +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank()) +
scale_fill_manual(values = "sienna4")
distrib_a_CA125 <- distrib_a_ba[distrib_a_ba$Stain %in% 'CA125', ]
distrib_lobule_CA125 <-ggplot(distrib_a_CA125, aes(x=fct_reorder(Group_Case_Class, Tumor..Positive..), y=Tumor..Positive.., fill = Stain)) +
geom_col(width = 0.7) +
labs(title = "Distribution of CA125 expression in the acinar invasion ROIs", subtitle = "All cases") +
theme_clean() +
labs(x = "Each case + stromal ROI combination", y = "% CA125+ PDAC cells") +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank()) +
scale_fill_manual(values = "brown2")
## Classical in acinar ROIs ##
distrib_a_cl <- distrib_a[distrib_a$Stain %in% c('Muc5', 'CDX2'), ]
distrib_lobule_classical <-ggplot(distrib_a_cl, aes(x=fct_reorder(Group_Case_Class, Tumor..Positive..), y=Tumor..Positive.., fill = Stain)) +
geom_col(width = 0.7) +
labs(title = "Distribution of classical stains' expression in the acinar invasion ROIs", subtitle = "All cases") +
theme_clean() +
facet_grid(Stain ~ .) +
labs(x = "Each case + stromal ROI combination",) +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank())
# Stain specific
distrib_a_Muc5 <- distrib_a_cl[distrib_a_cl$Stain %in% 'Muc5', ]
distrib_lobule_Muc5 <-ggplot(distrib_a_Muc5, aes(x=fct_reorder(Group_Case_Class, Tumor..Positive..), y=Tumor..Positive.., fill = Stain)) +
geom_col(width = 0.7) +
labs(title = "Distribution of Muc5 expression in the acinar invasion ROIs", subtitle = "All cases") +
theme_clean() +
labs(x = "Each case + stromal ROI combination", y = "% Muc5+ PDAC cells") +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank()) +
scale_fill_manual(values = "dodgerblue4")
distrib_a_CDX2 <- distrib_a_cl[distrib_a_cl$Stain %in% 'CDX2', ]
distrib_lobule_CDX2 <-ggplot(distrib_a_CDX2, aes(x=fct_reorder(Group_Case_Class, Tumor..Positive..), y=Tumor..Positive.., fill = Stain)) +
geom_col(width = 0.7) +
labs(title = "Distribution of CDX2 expression in the acinar invasion ROIs", subtitle = "All cases") +
theme_clean() +
labs(x = "Each case + stromal ROI combination", y = "% CDX2+ PDAC cells") +
theme(axis.text.x=element_blank(), axis.ticks.x=element_blank()) +
scale_fill_manual(values = "lightsteelblue4")
distrib_stroma_basal
distrib_stroma_CK17
distrib_stroma_CK5
distrib_stroma_CA125
distrib_stroma_HMGA2
distrib_stroma_classical
distrib_stroma_Muc5
distrib_stroma_CDX2
distrib_lobule_basal
distrib_lobule_CK17
distrib_lobule_CK5
distrib_lobule_HMGA2
distrib_lobule_CA125
distrib_lobule_classical
distrib_lobule_Muc5
distrib_lobule_CDX2
library(forcats)
density_stroma <- distrib_s %>%
ggplot(aes(x = Tumor..Positive.., fill = Stain)) +
geom_density(color="#e9ecef", alpha=0.8) +
facet_grid(~Stain)
density_stroma
#As ridgeline
library(ggridges)
ridges_stroma <- distrib_s %>%
ggplot(aes(x = Tumor..Positive.., y = Stain, fill = Stain)) +
geom_density_ridges(color="#e9ecef", alpha=0.8)
ridges_stroma
#As ridgeline with color gradient
library(viridis)
library(hrbrthemes)
ridges_gradient_stroma <- ggplot(distrib_s, aes(x = `Tumor..Positive..`, y = `Stain`, fill = ..x..)) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +
scale_fill_viridis(name = "Temp. [F]", option = "E") +
labs(title = 'Density of stains in stroma') +
theme_clean() +
theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
)+
xlab("% Positive cells") + ylab(NULL)
ridges_gradient_stroma
# Violin plots
violin_stroma_trimmed <- distrib_s %>%
ggplot(aes(x = Stain, y = Tumor..Positive.., fill = Stain)) +
geom_violin(trim = TRUE) +
theme_clean()
violin_stroma_trimmed
library(forcats)
density_lobule <- distrib_a %>%
ggplot(aes(x = Tumor..Positive.., fill = Stain)) +
geom_density(color="#e9ecef", alpha=0.8) +
facet_grid(~Stain)
density_lobule
#As ridgeline
library(ggridges)
ridges_lobule <- distrib_a %>%
ggplot(aes(x = Tumor..Positive.., y = Stain, fill = Stain)) +
geom_density_ridges(color="#e9ecef", alpha=0.8)
ridges_lobule
#As ridgeline with color gradient
ridges_gradient_lobule <- ggplot(distrib_a, aes(x = `Tumor..Positive..`, y = `Stain`, fill = ..x..)) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +
scale_fill_viridis(name = "Temp. [F]", option = "E") +
labs(title = 'Density of stains in Lobule') +
theme_clean() +
theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
) +
xlab("% Positive cells") + ylab(NULL)
ridges_gradient_lobule
# Violin plots
violin_acinar_trimmed <- distrib_a %>%
ggplot(aes(x = Stain, y = Tumor..Positive.., fill = Stain)) +
geom_violin(trim = TRUE) +
theme_clean()
violin_acinar_trimmed
#Violin plots for both compartments
distrib_all <- all_combined[, c(1, 2, 3, 5, 11, 12)]
violin_both_untrimmed <- distrib_all %>%
ggplot(aes(x = Stain, y = Tumor..Positive.., color = Tissue_compartment)) +
geom_violin(trim = FALSE, adjust = 2) +
theme_calc()
violin_both_untrimmed
Plasticity_ID <- m_Crows
Plasticity_ID$PKR <- rownames(Plasticity_ID)
# 'Basal' and 'Classical' both go to the moderate category
Plasticity_ID %>% count(Plasticity)
Plasticity_ID <- Plasticity_ID %>% mutate(Plasticity = ifelse(grepl('Basal', .$Plasticity), 'Moderate', .$Plasticity))
Plasticity_ID <- Plasticity_ID %>% mutate(Plasticity = ifelse(grepl('Classical', .$Plasticity), 'Moderate', .$Plasticity))
Plasticity_ID %>% count(Plasticity)
# Fraction of any type of switching; 24/31 ≈ 77,4%
range(all_combined_exl$Num.Detections)
# between 299-864 cells in ROIs.
Fig_2e <- pheatmap(t_m_matrix_B, cluster_rows = T, cluster_cols = T, annotation_row = m_B, color=col.pal2, annotation_colors = annot_colors_B, show_rownames = F, cutree_cols = 2, main = "Heatmap B: Case ID and stains over ROI:s. Values: % Positive tumor cells")
Fig_2e
Fig_2e
